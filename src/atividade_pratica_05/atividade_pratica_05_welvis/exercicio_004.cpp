/*
Exerc√≠cio 4: Opera√ß√µes com valores de ponto flutuante

    ‚óè Escreva um programa que:
        a. Declare tr√™s vari√°veis de tipo double, vamos chamar de x, y e z
        mas voc√™ pode escolher outro identificador se achar mais apropriado;

        b. Pe√ßa ao usu√°rio para digitar dois n√∫meros de ponto flutuante,
        obtenha-os da entrada padr√£o, usando cin, e atribua os valores
        digitados √†s vari√°veis x e y respectivamente;

        c. Considerando que x e y s√£o coordenadas num plano cartesiano,
        identifique em que lado da curva f(x) = 5x + 2 se encontra (esquerda,
        direita ou na curva). Imprima o resultado na tela;

*/

#include <iostream>
using namespace std;


int main() {
    double x, y, z;

    cout << "Digite o valor de x: ";
    cin >> x;

    cout << "Digite o valor de y: ";
    cin >> y;

    // Calcula o valor da fun√ß√£o f(x) = 5x + 2
    double f_x = 5 * x + 2;

    if (y > f_x) {
        cout << "O ponto (" << x << ", " << y << ") est√° acima da curva f(x) = 5x + 2." << endl;
    } else if (y < f_x) {
        cout << "O ponto (" << x << ", " << y << ") est√° abaixo da curva f(x) = 5x + 2." << endl;
    } else {
        cout << "O ponto (" << x << ", " << y << ") est√° sobre a curva f(x) = 5x + 2." << endl;
    }

    return 0;
}



/*
    d. Atividade avan√ßada: Atribua √† vari√°vel z o valor da dist√¢ncia
    euclidiana do ponto (x, y) ao centro de coordenadas; (dist√¢ncia
    euclidiana se calcula como raiz(x^2+y^2), (pesquise na biblioteca padr√£o ùë•2+ùë¶2
    como determinar a raiz quadrada de um n√∫mero);
        
*/

#include <iostream>
#include <cmath>
using namespace std;

int main() {
    double x, y, z;

    cout << "Digite o valor de x: ";
    cin >> x;

    cout << "Digite o valor de y: ";
    cin >> y;

    // Calcula o valor da fun√ß√£o f(x) = 5x + 2
    double f_x = 5 * x + 2;

    if (y > f_x) {
        cout << "O ponto (" << x << ", " << y << ") est√° acima da curva f(x) = 5x + 2." << endl;
    } else if (y < f_x) {
        cout << "O ponto (" << x << ", " << y << ") est√° abaixo da curva f(x) = 5x + 2." << endl;
    } else {
        cout << "O ponto (" << x << ", " << y << ") est√° sobre a curva f(x) = 5x + 2." << endl;
    }

    // Calcula a dist√¢ncia euclidiana ao centro de coordenadas
    z = sqrt(x*x + y*y);
    cout << "A dist√¢ncia euclidiana do ponto (" << x << ", " << y << ") ao centro de coordenadas √©: " << z << endl;

    return 0;
}



/*
    e. Atribua √† vari√°vel z o produto entre as vari√°veis x e y, imprima o
    resultado na tela em nota√ß√£o cient√≠fica; 
            
*/

#include <iostream>
#include <cmath>
using namespace std;

int main() {
    double x, y, z;

    cout << "Digite o valor de x: ";
    cin >> x;

    cout << "Digite o valor de y: ";
    cin >> y;

    // Calcula o valor da fun√ß√£o f(x) = 5x + 2
    double f_x = 5 * x + 2;

    if (y > f_x) {
        cout << "O ponto (" << x << ", " << y << ") est√° acima da curva f(x) = 5x + 2." << endl;
    } else if (y < f_x) {
        cout << "O ponto (" << x << ", " << y << ") est√° abaixo da curva f(x) = 5x + 2." << endl;
    } else {
        cout << "O ponto (" << x << ", " << y << ") est√° sobre a curva f(x) = 5x + 2." << endl;
    }

    // Calcula a dist√¢ncia euclidiana ao centro de coordenadas
    z = sqrt(x*x + y*y);
    cout << "A dist√¢ncia euclidiana do ponto (" << x << ", " << y << ") ao centro de coordenadas √©: " << z << endl;

    // Calcula o produto entre x e y e imprime em nota√ß√£o cient√≠fica
    z = x * y;
    cout << "O produto de x e y em nota√ß√£o cient√≠fica √©: " << scientific << z << endl;

    return 0;
}


/*
‚óè Escreva um programa que:

    a. leia da entrada padr√£o os valores reais dos coeficientes a, b e c, de um
    polin√¥mio de segundo grau do tipo ùëù(ùë•)=ùëéùë•2+ùëèùë•+ùëê, e imprima:

        i. Se o polin√¥mio tem uma, duas ou nenhuma raiz real (lembre
        das suas aulas de segundo grau qual a condi√ß√£o que define
        qual o n√∫mero de ra√≠zes de um polin√¥mio);
        
        ii. Se tiver ra√≠zes (uma ou duas) imprima o valor das mesmas. No
        exerc√≠cio anterior voc√™ deve ter descoberto como calcular a
        raiz quadrada de um n√∫mero;

*/

#include <iostream>
#include <cmath>
using namespace std;

int main() {
    double a, b, c;
    cout << "Digite os coeficientes a, b e c: ";
    cin >> a >> b >> c;

    double delta = b * b - 4 * a * c;

    if (delta > 0) {
        double root1 = (-b + sqrt(delta)) / (2 * a);
        double root2 = (-b - sqrt(delta)) / (2 * a);
        cout << "O polin√¥mio tem duas ra√≠zes reais:\n";
        cout << "Raiz 1: " << root1 << "\n";
        cout << "Raiz 2: " << root2 << "\n";
    } else if (delta == 0) {
        double root = -b / (2 * a);
        cout << "O polin√¥mio tem uma raiz real:\n";
        cout << "Raiz: " << root << "\n";
    } else {
        cout << "O polin√¥mio n√£o possui ra√≠zes reais.\n";
    }

    return 0;
}


/*
    b. Leia da entrada padr√£o um valor para x e imprima o valor de p(x);

*/

#include <iostream>
#include <cmath>
using namespace std;

int main() {
    double a, b, c, x;
    cout << "Digite os coeficientes a, b e c: ";
    cin >> a >> b >> c;

    double delta = b * b - 4 * a * c;

    if (delta > 0) {
        double root1 = (-b + sqrt(delta)) / (2 * a);
        double root2 = (-b - sqrt(delta)) / (2 * a);
        cout << "O polin√¥mio tem duas ra√≠zes reais:\n";
        cout << "Raiz 1: " << root1 << "\n";
        cout << "Raiz 2: " << root2 << "\n";
    } else if (delta == 0) {
        double root = -b / (2 * a);
        cout << "O polin√¥mio tem uma raiz real:\n";
        cout << "Raiz: " << root << "\n";
    } else {
        cout << "O polin√¥mio n√£o possui ra√≠zes reais.\n";
    }

    cout << "Digite o valor de x: ";
    cin >> x;

    double px = a * x * x + b * x + c;
    cout << "O valor de p(x) √©: " << px << "\n";

    return 0;
}
